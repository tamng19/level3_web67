type EnvFunc = <T = unknown>(key: string, defaultValue?: T) => T;
export type StringOrUndefined<T extends undefined | string> = T extends string ? string : undefined;
export type NumberOrUndefined<T extends undefined | number> = T extends number ? number : undefined;
export type BooleanOrUndefined<T extends undefined | boolean> = T extends boolean ? boolean : undefined;
export type DateOrUndefined<T extends undefined | Date> = T extends Date ? Date : undefined;
export type ArrayOfStringOrUndefined<T extends undefined | string[]> = T extends string[] ? string[] : undefined;
declare const _default: EnvFunc & {
    /**
     * Get string from environment
     *
     * @param key string
     * @param defaultValue string
     * @returns string
     */
    string<R extends string | undefined>(key: string, defaultValue?: R | undefined): StringOrUndefined<R>;
    /**
     * Get integer from environment
     *
     * @param key string
     * @param defaultValue integer number
     * @returns integer number
     */
    int<R_1 extends number | undefined>(key: string, defaultValue?: R_1 | undefined): R_1 | NumberOrUndefined<R_1> | undefined;
    /**
     * Get float from environment
     *
     * @param key string
     * @param defaultValue float number
     * @returns float number
     */
    float<R_2 extends number | undefined>(key: string, defaultValue?: R_2 | undefined): R_2 | NumberOrUndefined<R_2> | undefined;
    /**
     * Get boolean from environment
     *
     * @param key string
     * @param defaultValue boolean
     * @returns boolean
     */
    bool<R_3 extends boolean | undefined>(key: string, defaultValue?: R_3 | undefined): R_3 | BooleanOrUndefined<R_3> | undefined;
    /**
     * Get JSON object from environment
     *
     * @param key string
     * @param defaultValue string
     * @returns object
     */
    json<T = unknown>(key: string, defaultValue?: T | undefined): T;
    /**
     * Get string array from environment
     *
     * @param key string
     * @param defaultValue string[]
     * @returns string[]
     */
    array<R_4 extends string[] | undefined>(key: string, defaultValue?: R_4 | undefined): ArrayOfStringOrUndefined<R_4>;
    /**
     * Get Date object from environment
     *
     * @param key string
     * @param defaultValue Date
     * @returns Date
     */
    date<R_5 extends Date | undefined>(key: string, defaultValue?: R_5 | undefined): R_5 | DateOrUndefined<R_5> | undefined;
};
export default _default;
